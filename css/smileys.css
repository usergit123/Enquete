@import url('https://fonts.googleapis.com/css?family=Roboto');

body,
html {
  display: grid;
  height: 100%;
  width: 100%;
  background-color: rgb(242, 242, 242);
  font-family: 'Roboto', sans-serif;
  color: rgba(0, 0, 16, 0.8);
 
  padding: 0;
  margin: 0;
}

a:link,
a:visited,
a:hover,
a:active {
  color: rgba(0, 0, 16, 0.8);
  text-decoration: none;
}

a:hover,
a:active {
  border-bottom: 0.1em solid rgba(0, 0, 16, 0.8);
  color: rgba(0, 0, 16, 0.8);
  text-decoration: none;
}

span {
  color: rgba(0, 0, 16, 0.4);
  font-size: 70%;
}



.rating-container {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  padding: 0.4rem 0.8rem;
  width: 100%;
}

.rating-text p {
  color: rgba(0, 0, 16, 0.8);
  font-size: 1.3rem;
  padding: 0.3rem;
}

.rating {
  background-color: rgb(242,242,242);
  margin: auto;
  border-radius: 2.2rem;
}

svg {
  fill: rgb(102, 179, 255);
  height: 3.6rem;
  width: 3.6rem;
  margin: 0.2rem;
}

.rating-form-2 svg {
  height: 3rem;
  width: 3rem;
  margin: 0.5rem;
}

#radios label {
  position: relative;
}

input[type="radio"] {
  position: absolute;
  opacity: 0;
}

input[type="radio"] + svg {
  -webkit-transition: all 0.2s;
  transition: all 0.2s;
}

input + svg {
  cursor: pointer;
}



input[class="super-happy"]:hover + svg,
input[class="super-happy"]:checked + svg,
input[class="super-happy"]:focus + svg {
  fill: rgb(0, 109, 217);
}

input[class="happy"]:hover + svg,
input[class="happy"]:checked + svg,
input[class="happy"]:focus + svg {
  fill: rgb(0, 204, 79);
}

input[class="neutral"]:hover + svg,
input[class="neutral"]:checked + svg,
input[class="neutral"]:focus + svg {
  fill: rgb(232, 214, 0);
}

input[class="sad"]:hover + svg,
input[class="sad"]:checked + svg,
input[class="sad"]:focus + svg {
  fill: rgb(229, 132, 0);
}

input[class="super-sad"]:hover + svg,
input[class="super-sad"]:checked + svg,
input[class="super-sad"]:focus + svg {
  fill: rgb(239, 42, 16);
}







input[type="radio"] {
  display: none;
}

label {
  font-size: 24px;
  color: #bfbfbf;
  display: inline-block;
  padding: 0 0 0 1em;
  cursor: pointer;
}
label:before {
  content: '';
  display: inline-block;
  background: #55D8C6;
  position: static;
  left: 0;
  top: 5px;
  height: 20px;
  width: 20px;
  margin-right: 10px;
  border-radius: 80%;
  box-shadow: 0px 1px 0 0 rgba(0, 0, 0, .2);
  box-sizing: border-box;
  border: 10px solid #fff;
  transition: border .3s ease;
}

input:checked + label:before {
  border-color: #fff;
  border-width: 3px;
}
input + label {
  transition: color .7s ease;
}
input:checked + label {
  color: #5D5D5D;
}






$wormDur: 0.4s
$radioDur: 0.2s
$timing1: cubic-bezier(0.45,0.05,0.55,0.95)
$timing2: cubic-bezier(0.5,0,0.5,2)

*
    border: 0
    box-sizing: border-box
    margin: 0
    padding: 0

\:root
    font-size: calc(32px + (40 - 32)*(100vw - 320px)/ (1024 - 320))

body
    background: #f1f1f1
    color: #171717
    display: flex
    font: 1em Ubuntu, sans-serif
    height: 100vh
    line-height: 1.5
    padding: 1.5em 0

form
    display: block
    margin: auto
    max-width: 10em
    position: relative

input
    position: fixed
    top: -1.5em
    left: -1.5em

label
    $shadowColor: rgba(0,0,0,0.2)
    cursor: pointer
    display: block
    font-weight: bold
    text-shadow: 0 0.1em 0.1em $shadowColor
    transition: color $radioDur $timing1
    &:not(:last-of-type)
        margin-bottom: 1.5em
    span
        box-shadow: 0 0 0 0.2em currentColor inset, 0 0.2em 0.2em $shadowColor, 0 0.3em 0.2em $shadowColor inset
        display: inline-block
        margin-right: 0.5em
        vertical-align: bottom
        width: 1.5em
        height: 1.5em
        transition: transform $radioDur $timing2, box-shadow $radioDur $timing1, color $radioDur $timing1

label span,
.worm__segment:before
    border-radius: 50%

input:checked + label,
input:checked + label span,
.worm__segment:before
    color: #2762f3

input:checked + label
    &, span
        transition-delay: $wormDur
    span
        transform: scale(1.2)

.worm
    top: 0.375em
    left: 0.375em
    &, &__segment
        position: absolute
    &__segment
        top: 0
        left: 0
        width: 0.75em
        height: 0.75em
        transition: transform $wormDur $timing1
        &:before
            animation-duration: $wormDur
            animation-timing-function: $timing1
            background: currentColor
            content: ""
            display: block
            width: 100%
            height: 100%
        &:first-child, &:last-child
            &:before
                box-shadow: 0 0 1em 0 currentColor

@for $s from 2 through 30
    $delay: $wormDur/100 * ($s - 1)
    .worm__segment:nth-child(#{$s})
        transition-delay: $delay
        &:before
            animation-delay: $delay

/* States */


@for $s from 1 through 3
    input:nth-of-type(#{$s}):checked ~ .worm .worm__segment
        @if $s > 1
            transform: translateY(3em * ($s - 1))
        &:before
            animation-name: hop#{$s}

    @keyframes hop#{$s}
        from, to
            transform: translateX(0)
        50%
            transform: translateX(-1.5em)

/* Dark mode */




@media screen and (prefers-color-scheme: dark)
    body
        background: #242424
        color: #f1f1f1
    
    input:checked + label,
    input:checked + label span, 
    .worm__segment:before
        color: #5785f6



